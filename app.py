# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qlLklcwzaVXyI8h0riG-ygLbJHuSOMNQ
"""

# app.py
import streamlit as st
import pandas as pd
from jra_logic import get_jra_info, normalize_kb, find_codes_for_year_and_title

st.set_page_config(page_title="Pencari Kode Arsip (JRA)", page_icon="üóÇÔ∏è", layout="centered")
st.title("üîé Pencarian Kode Arsip berdasarkan Tahun & Judul")

st.markdown("""
Masukkan **Tahun Dokumen** (tahun saja) dan **Judul / Deskripsi** dokumen.
Aplikasi akan:
1. Tentukan JRA berdasarkan aturan (otomatis).
2. Cari di `knowledge_base.xlsx` (kolom: Jenis Dokumen, JRA, Kode) berdasarkan JRA + kecocokan judul.
""")

# Upload KB (opsional)
uploaded = st.file_uploader("Upload knowledge_base.xlsx (opsional, format: .xlsx)", type=["xlsx"])
if uploaded is None:
    try:
        df_kb = pd.read_excel("knowledge_base.xlsx")
    except Exception:
        df_kb = pd.DataFrame(columns=["Jenis Dokumen","JRA","Kode"])
else:
    df_kb = pd.read_excel(uploaded)

with st.expander("Lihat preview KB"):
    st.write(df_kb.head())

# Normalize KB
try:
    df_kb = normalize_kb(df_kb)
except Exception as e:
    st.error(f"Error memproses KB: {e}")
    st.stop()

st.header("Input Dokumen")
col1, col2 = st.columns([2,1])
with col1:
    judul = st.text_input("Judul / Deskripsi Dokumen", placeholder="contoh: Penugasan Dinas")
with col2:
    tahun = st.number_input("Tahun Dokumen", min_value=1900, max_value=2100, value=2017, step=1)

if st.button("Cari Kode Arsip"):
    if not judul:
        st.warning("Isi judul dokumen dulu.")
    else:
        jra_info = get_jra_info(int(tahun))
        if not jra_info:
            st.error(f"Tahun {tahun} tidak masuk aturan JRA.")
        else:
            st.success(f"Ditentukan: **{jra_info['label']}** (Excel JRA = {jra_info['excel']})")
            hasil = find_codes_for_year_and_title(df_kb, jra_info['excel'], judul)
            if hasil.empty:
                st.info("Tidak ditemukan kecocokan langsung. Menampilkan semua entri JRA:")
                st.dataframe(df_kb[df_kb["JRA"]==jra_info['excel']])
            else:
                st.subheader("Hasil Cocok")
                st.dataframe(hasil.reset_index(drop=True))
                csv = hasil.to_csv(index=False).encode("utf-8")
                st.download_button("Download hasil (CSV)", data=csv, file_name="hasil_kode_arsip.csv", mime="text/csv")
